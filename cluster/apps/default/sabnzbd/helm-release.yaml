---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system

  maxHistory: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  install:
    createNamespace: true
    remediation:
      retries: 3

  values:
    controllers:
      sabnzbd:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          sabnzbd:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.4.1@sha256:fd85776610865ba5bd8da40415759871ee70dfe9371f88ee88f18a847391ce6a
            env:
              TZ: America/New_York
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.default,
                sabnzbd.default.svc,
                sabnzbd.default.svc.cluster,
                sabnzbd.default.svc.cluster.local,
                "sabnzbd.${SECRET_DOMAIN}"

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 3000
          - 568

    service:
      app:
        controller: sabnzbd
        ports:
          http:
            port: *port
            
    ingress:
      sabnzbd:
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-forward-auth@kubernetescrd"
        hosts:
          - host: "sabnzbd.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "sabnzbd.${SECRET_DOMAIN}"
            secretName: "sabnzbd-tls"

    persistence:
      config:
        enabled: true
        existingClaim: sabnzbd-config-v1
        globalMounts:
          - path: /config
            subPath: data

      complete-downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: "/mergerfs/storage"
        globalMounts:
          - path: "/mergerfs/storage"
