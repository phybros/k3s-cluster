---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: benji
  namespace: backup-system
spec:
  releaseName: benji
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://benji-backup.me/helm-charts/
      chart: benji
      version: 2.0.0
      sourceRef:
        kind: HelmRepository
        name: benji-charts
        namespace: flux-system
      interval: 5m
  values:
    timeZone: America/Toronto
    benji:
      image:
        registry: ghcr.io
        repository: elemental-lf/benji-k8s
        tag: 0.17.0
        pullPolicy: IfNotPresent
      configuration:
        configurationVersion: "1"
        databaseEngine: postgresql://benji:secret@benji-postgresql-hl:5432/benji
        defaultStorage: s3
        storages:
          - name: storage-1
            storageId: 1
            module: file
            configuration:
              path: /benji-pg-backup
          - name: s3
            storageId: 2
            module: s3
            configuration:
              awsAccessKeyIdFile: /etc/aws/key
              awsSecretAccessKeyFile: /etc/aws/secret
              bucketName: k3s-cluster-backups
              regionName: us-east-1
        ios:
          - module: rbdaio
            name: replicapool
            configuration:
              simultaneousReads: 3
              simultaneousWrites: 3
              cephConfigFile: /etc/ceph/ceph.conf
              clientIdentifier: admin
              newImageFeatures:
                - RBD_FEATURE_LAYERING
                - RBD_FEATURE_EXCLUSIVE_LOCK
                - RBD_FEATURE_STRIPINGV2
                - RBD_FEATURE_OBJECT_MAP
                - RBD_FEATURE_FAST_DIFF
                - RBD_FEATURE_DEEP_FLATTEN
      cronJob:
        activeDeadlineSeconds: null
        startingDeadlineSeconds: null
      crontab:
        - name: backup-all
          schedule: "30 07 * * *"
          command:
            - benji-backup-pvc
            - -l
            - 'backup-this-pvc = yes'
        - name: enforce
          schedule: "00 06 * * *"
          command:
            - benji-command
            - enforce
            - latest7
            - 'labels["benji-backup.me/instance"] == "benji-k8s"'
        - name: cleanup
          schedule: "00 09 * * *"
          command:
            - benji-command
            - cleanup
      volumes:
        - name: backup-s3-credentials
          secret:
            secretName: backup-s3-credentials
            items:
              - key: key
                path: key
              - key: secret
                path: secret
        - name: benji-pg-backup
          persistentVolumeClaim:
            claimName: benji-pg-backup
        - name: mon-endpoint-volume
          configMap:
            name: rook-ceph-mon-endpoints
            items:
              - key: data
                path: mon-endpoints
        - name: ceph-data
          emptyDir: {}
        - name: ceph-config
          configMap:
            name: ceph-config
      volumeMounts:
        - name: benji-pg-backup
          mountPath: /benji-pg-backup
        - name: ceph-data
          mountPath: /etc/ceph
        - name: backup-s3-credentials
          mountPath: /etc/aws
          readOnly: true
    fsfreeze:
      enabled: true
    postgresql:
      enabled: true
      image:
        tag: 14
      auth:
        enablePostgresUser: false
        username: benji
        database: benji
        password: secret
    pushgateway:
      image:
        registry: docker.io
        repository: prom/pushgateway
        tag: v1.11.1
        pullPolicy: IfNotPresent
      nameOverride: pushgateway
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: Deployment
              name: benji-maint
            patch:
              - op: replace
                path: /spec/template/spec/containers/0/volumeMounts
                value:
                  - name: benji-config
                    mountPath: /benji/etc
                  - name: benji-pg-backup
                    mountPath: /benji-pg-backup
                  - name: ceph-data
                    mountPath: /etc/ceph
                  - name: backup-s3-credentials
                    mountPath: /etc/aws
                    readOnly: true
              - op: add
                path: /spec/template/metadata/annotations
                value:
                  configmap.reloader.stakater.com/reload: "ceph-config"
              - op: add
                path: /spec/template/metadata/annotations
                value:
                  secret.reloader.stakater.com/reload: "rook-ceph-mon"
              - op: add
                path: /spec/template/spec/initContainers
                value:
                  - name: generate-ceph-files
                    image: rook/ceph:v1.17.5
                    imagePullPolicy: Always
                    command: ["/usr/bin/bash"]
                    args: ["-c", "bash /script/generate-ceph.sh"]
                    volumeMounts:
                      - name: mon-endpoint-volume
                        mountPath: /etc/rook
                      - name: ceph-data
                        mountPath: /etc/ceph
                      - name: ceph-config
                        mountPath: /script/generate-ceph.sh
                        subPath: generate-ceph.sh
                    env:
                      - name: ROOK_CEPH_USERNAME
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-username
                      - name: ROOK_CEPH_SECRET
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-secret
          # - target:
          #     kind: DaemonSet
          #     name: benji-fsfreeze
          #   patch:
          #     - op: replace
          #       path: /spec/template/spec/containers/0/volumeMounts
          #       value:
          #         - name: rbd-mounts
          #           mountPath: /var/lib/kubelet/plugins/kubernetes.io/rbd/mounts/

          # TODO: maybe there's a less gross way to do this. For now, patch every cronjob with the ceph secrets
          # Stolen from https://discord.com/channels/673534664354430999/675009698755379220/910288065229123665
          - target:
              kind: CronJob
              name: benji-backup-all
            patch:
              - op: add
                path: /spec/jobTemplate/spec/template/spec/initContainers
                value:
                  - name: generate-ceph-files
                    image: rook/ceph:v1.17.5
                    imagePullPolicy: Always
                    command: ["/usr/bin/bash"]
                    args: ["-c", "bash /script/generate-ceph.sh"]
                    volumeMounts:
                      - name: mon-endpoint-volume
                        mountPath: /etc/rook
                      - name: ceph-data
                        mountPath: /etc/ceph
                      - name: ceph-config
                        mountPath: /script/generate-ceph.sh
                        subPath: generate-ceph.sh
                    env:
                      - name: ROOK_CEPH_USERNAME
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-username
                      - name: ROOK_CEPH_SECRET
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-secret

          - target:
              kind: CronJob
              name: benji-enforce
            patch:
              - op: add
                path: /spec/jobTemplate/spec/template/spec/initContainers
                value:
                  - name: generate-ceph-files
                    image: rook/ceph:v1.17.5
                    imagePullPolicy: Always
                    command: ["/usr/bin/bash"]
                    args: ["-c", "bash /script/generate-ceph.sh"]
                    volumeMounts:
                      - name: mon-endpoint-volume
                        mountPath: /etc/rook
                      - name: ceph-data
                        mountPath: /etc/ceph
                      - name: ceph-config
                        mountPath: /script/generate-ceph.sh
                        subPath: generate-ceph.sh
                    env:
                      - name: ROOK_CEPH_USERNAME
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-username
                      - name: ROOK_CEPH_SECRET
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-secret

          - target:
              kind: CronJob
              name: benji-cleanup
            patch:
              - op: add
                path: /spec/jobTemplate/spec/template/spec/initContainers
                value:
                  - name: generate-ceph-files
                    image: rook/ceph:v1.17.5
                    imagePullPolicy: Always
                    command: ["/usr/bin/bash"]
                    args: ["-c", "bash /script/generate-ceph.sh"]
                    volumeMounts:
                      - name: mon-endpoint-volume
                        mountPath: /etc/rook
                      - name: ceph-data
                        mountPath: /etc/ceph
                      - name: ceph-config
                        mountPath: /script/generate-ceph.sh
                        subPath: generate-ceph.sh
                    env:
                      - name: ROOK_CEPH_USERNAME
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-username
                      - name: ROOK_CEPH_SECRET
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-secret
